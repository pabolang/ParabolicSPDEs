% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimateParametersSPDE.R
\name{estimateParametersSPDE}
\alias{estimateParametersSPDE}
\title{Estimate the parameters of a parabolic SPDE model}
\usage{
estimateParametersSPDE(
  data,
  estimationMethod,
  spatialDelta = 0.05,
  theta1 = NA,
  theta2 = NA,
  sigma = NA,
  kappa = NA,
  sigma0_squared = NA
)
}
\arguments{
\item{data}{either a numerical \code{NxM} matrix or a list containing numerical \code{NxM} matrices. \code{N} denotes the temporal and \code{M} the spatial resolution of the grid.}

\item{estimationMethod}{a string indicating the parameter/parameters to be estimated. If only sigma is unknown choose "OracleSigma" and provide \code{theta1,theta2} respectively.
If \code{sigma and theta2} are known choose "OracleKappa" and provide the known parameters \code{sigma, theta2} or directly \code{sigma0_squared}.
If none of the parameters is known, choose "both". No additional information needs to be provided. The ML-estimator by Bibinger and Trabs is given by \code{simulationMethod = "BT_both"}.}

\item{spatialDelta}{a real number greater than zero and less than 1/2 for selecting only the data points which are delta away from the Dirichlet boundary condition. Default is 0.05.}

\item{...}{further arguments depending on the chosen estimation method. See \code{estiamtionmethod} or the examples below.}
}
\value{
a numeric vector or a named numeric vector for estimationMethod="both". For method "OracleSigma" the returned value denotes the estimation of sigma^2. For method "OracleKappa" the returned value denotes the estimated quotient theta1/theta2.
For the method "both" two estimations are returned per data set, namely kappa = theta1/theta2 and sigma0_squared = sigma^2/(theta2)^(1/2).
See references for details on estimation methods.
}
\description{
Oracle and non-oralce estiamtions for SPDE models. All estimators are consistent and estimates the natrual parameters of the SPDE model. Non-Oracle estimations for parabolic SPDEs are based on a log-linear model, see references Bibinger, M. and Bossert, P. (2022).
}
\examples{
theta0 = 0
theta1 = 1
theta2 = 1
sigma = 0.5
numberSpatialPoints = 10
numberTemporalPoints = 1000
reputations = 10

# Data
spde <- simulateSPDEmodel(theta0,theta1,theta2,sigma,numberSpatialPoints,numberTemporalPoints)
spde_list <- MCSPDESamples(reputations,theta0,theta1,theta2,sigma,numberSpatialPoints,numberTemporalPoints)

# Estimation
estimateParametersSPDE(spde,estimationMethod = "OracleSigma",theta1=1,theta2=1)
estimateParametersSPDE(spde,estimationMethod = "OracleKappa",sigma=0.5,theta2=1)
estimateParametersSPDE(spde,estimationMethod = "both")

estimateParametersSPDE(spde_list,estimationMethod = "OracleSigma",theta1=1,theta2=1)
estimateParametersSPDE(spde_list,estimationMethod = "OracleKappa",sigma=0.5,theta2=1)
estimateParametersSPDE(spde_list,estimationMethod = "both")
}
\references{
Bibinger, M. and Bossert, P. (2022) Efficient parameter estimation for parabolic SPDEs based on a log-linear model for realized volatilities,
Bibinger, M. and Trabs, M. (2017) Volatility estimation for stochastic PDEs using high-frequency observations,
Hildebrandt, F. and Trabs M. (2019) Parameter estimation for SPDEs based on discrete observations in time and space.
}
\seealso{
\link{simulateSPDEmodel}, \link{MCSPDESamples}.
}
\keyword{Estimation}
\keyword{Parameter}
\keyword{SPDEs.}
\keyword{for}
